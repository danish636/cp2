from django.urls import path
from . import views
from django.shortcuts import redirect, reverse
from django.conf.urls.static import static
from django.conf import settings


urlpatterns = [
path('search/', views.search, name='serach'),
path('user_signup', views.user_signup),
path('login/', views.UserTokenObtainPairView.as_view(), name='login'),
path("decript_to_test_en_de/", views.decript_to_test_en_de, name= "decript_to_test_en_de"),
path("encript_given_data/", views.encript_given_data, name= "encript_given_data"),
path("etf_stock_exposure/", views.etf_stock_exposure, name= "etf_stock_exposure"),
path("balanceSheet/", views.balanceSheet, name= "balanceSheet"),
path("cashFlow/", views.cashFlow, name= "cashFlow"),
path("ratiottm/", views.ratiottm, name= "ratiottm"),
path("historicalChart/", views.historicalChart, name= "historicalChart"),
path("historicalPrice/", views.historicalPrice, name= "historicalPrice"),
path("incomeStatement/", views.incomeStatement, name= "incomeStatement"),
path("companyProfile/", views.companyProfile, name= "companyProfile"),
path("companyOutllok/", views.companyOutllok, name= "companyOutllok"),
path("companyQuote/", views.companyQuote, name= "companyQuote"),
path("stockPeers/", views.stockPeers, name= "stockPeers"),
path("stockMarketActives/", views.stockMarketActives, name= "stockMarketActives"),
path("stockDividend/", views.stockDividend, name= "stockDividend"),
path("earnings/", views.earnings, name= "earnings"),
path("companyNews/", views.companyNews, name= "companyNews"),
path("stockPriceChange/", views.stockPriceChange, name= "stockPriceChange"),
path("prePostMarketTrade/", views.prePostMarketTrade, name= "prePostMarketTrade"),
path("secFilings/", views.secFilings, name= "secFilings"),
path("etfStockExposure/", views.etfStockExposure, name= "etfStockExposure"),
path("macroEconomicsEconomy/", views.macroEconomicsEconomy, name= "macroEconomicsEconomy"),
path("stockMarketGainers/", views.stockMarketGainers, name= "stockMarketGainers"),
path("stockMarketLosers/", views.stockMarketLosers, name= "stockMarketLosers"),
path("stockNews/", views.stockNews, name= "stockNews"),
path("generalNews/", views.generalNews, name= "generalNews"),
path("macroEconomicsCommodity/", views.macroEconomicsCommodity, name= "macroEconomicsCommodity"),
path("companyQuote/", views.companyQuote, name= "companyQuote"),
path("statistics/", views.statistics, name= "statistics"),
path("statisticsLock/", views.statisticsLock, name= "statisticsLock"),
path("historicalPriceWithDate/", views.historicalPriceWithDate, name= "historicalPriceWithDate"),
path("header2/", views.header2, name= "header2"),
path("earning_calendar/", views.earning_calendar, name= "earning_calendar"),
path("balanceSheetLock/", views.balanceSheetLock, name= "balanceSheetLock"),
path("incomeStatementLock/", views.incomeStatementLock, name= "incomeStatementLock"),
path("cashFlowLock/", views.cashFlowLock, name= "cashFlowLock"),
path("stockDividendLock/", views.stockDividendLock, name= "stockDividendLock"),
path("earningsLock/", views.earningsLock, name= "earningsLock"),
path("etfStockExposureLock/", views.etfStockExposureLock, name= "etfStockExposureLock"),
path("companyProfileQuoteMultiple/", views.companyProfileQuoteMultiple, name= "companyProfileQuoteMultiple"),
# path("viewProfile/<int:id>/", views.viewProfile, name= "viewProfile"),
path("test/", views.test, name= "test"),
path("listOfCourse/", views.listOfCourse, name= "listOfCourse"),
path("listOfChapter/", views.listOfChapter, name= "listOfChapter"),
path("fetchUserPortfolioLists/", views.fetchUserPortfolioLists, name= "fetchUserPortfolioLists"),
path("fetchPortfolioDetail/", views.fetchPortfolioDetail, name= "fetchPortfolioDetail"),
path("deletePortfolio/", views.deletePortfolio, name= "deletePortfolio"),
path("fetchUserDcfCalculatorFilter/", views.fetchUserDcfCalculatorFilter, name= "fetchUserDcfCalculatorFilter"),
path("fetchUserScreenerFilter/", views.fetchUserScreenerFilter, name= "fetchUserScreenerFilter"),
path("storeUserPortfolio/", views.storeUserPortfolio, name= "storeUserPortfolio"),
path("storeUserDcfCalculatorFilter/", views.storeUserDcfCalculatorFilter, name= "storeUserDcfCalculatorFilter"),
path("storeUserScreenerFilter/", views.storeUserScreenerFilter, name= "storeUserScreenerFilter"),
path("countOfData/", views.countOfData, name= "countOfData"),
path("storeUserPortfolioPublish/", views.storeUserPortfolioPublish, name= "storeUserPortfolioPublish"),
path("get_google_login_url/", views.get_google_login_url, name= "get_google_login_url"),
path("social_login_urls/", views.social_login_urls, name= "social_login_urls"),
path("get_user_data/", views.get_user_data, name= "get_user_data"),
path("dj-rest-auth/google/login/", views.GoogleLoginView.as_view(), name="google_login"),
path("~redirect/", views.UserRedirectView.as_view(), name="redirect"),
path('extra-apis', views.extra_apis, name="extra_apis"),
path("listPublished/", views.listPublished, name="listPublished"),
path("updateUserPortfolioPublish/", views.updateUserPortfolioPublish, name="updateUserPortfolioPublish"),
path("subscription/", views.create_subscription, name="subscription"),
path("cancel_subscription/", views.cancel_subscription, name="subscription"),
path("reactivate_subscription/", views.reactivate_subscription, name="subscription"),
path("setpassword", view=views.setpassword, name="setpassword"),
path("contact_us", view=views.contact_us, name="contact_us"),
path("webhook", view=views.webhook, name="webhook"),
path("marketsymbols", views.marketsymbols, name="marketsymbols"),
path("forgot_password", views.forgot_password, name="forgot_password"),

] + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT) + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
